# TODO: Generalize to `./unit3d-history.yml`?
---
id: "unit3d-history"
name: "UNIT3D (history)"
description: "UNIT3D user's torrent history plus site-wide user data"
language: "en-US"
type: "private"
encoding: "UTF-8"
links:
  - "https://seedpool.org/"
  - "https://upscalevault.com/"

caps:

  categorymappings:
    # TODO: Canonicalize these categories as much as possible into the various
    # "standards", conventions, and tools involved:
    # - `9###` = "User/*"
    # - `91##` = "User/Site-*"
    # - `94##` = "User/History-*"
    # - `97##` = "User/Moderation-*"
    - {id: 9000, cat: "Other/Misc", desc: "User"}
    - {id: 9100, cat: "Other/Misc", desc: "User/Site"}
    - {id: 9400, cat: "Other/Misc", desc: "User/History"}
    # Order from most specific and most likely to be useful to least so that the
    # category chosen for each row is most useful:
    - {id: "uploaded", cat: "Other/Misc", desc: "User/History-Uploaded"}
    - {id: "hitrun", cat: "Other/Misc", desc: "User/History-HnR"}
    - {id: "prewarn", cat: "Other/Misc", desc: "User/History-Prewarned"}
    - {id: "unsatisfied", cat: "Other/Misc", desc: "User/History-Unsatisfieds"}
    - {id: "active", cat: "Other/Misc", desc: "User/History-Active"}
    - {id: "completed", cat: "Other/Misc", desc: "User/History-Completed"}
    - {id: "immune", cat: "Other/Misc", desc: "User/History-Immune"}
    - {id: "downloaded", cat: "Other/Misc", desc: "User/History-Downloaded"}

  modes:
    search: ["q"]
    tv-search: ["q"]
    movie-search: ["q"]
    music-search: ["q"]

settings:
  - name: "username"
    type: "text"
    label: "Username"
  - name: "password"
    type: "password"
    label: "Password"
  - name: "sortField"
    type: "select"
    label: "Sort on the selected fields"
    options:
      name: "Name"
      seeders: "Seeders"
      leechers: "Leechers"
      times_completed: "Completed"
      agent: "Client"
      size: "Size"
      actual_uploaded: "Upload"
      actual_downloaded: "Download"
      actual_ratio: "Ratio"
      leechtime: "Leeched"
      seedtime: "Seeded"
      created_at: "Started"
      updated_at: "Updated"
      completed_at: "Completed"
      prewarned_at: "Prewarned?"
      seeding: "Seeding"
      leeching: "Leeching"
      hitrun: "H&R?"
      immune: "Immune?"
      uploaded: "Uploaded"
      status: "Approved"
    # Default to the sort most likely to include potential H&Rs, most recently
    # added/started in the client:
    default: "created_at"
  - name: "sortDirection"
    type: "select"
    label: "Sort direction"
    options:
      desc: "Descending"
      asc: "Ascending"
    default: "desc"

login:
  # note APIKEY is broken on this 5.3.0 site
  path: "login"
  method: "form"
  form: >-
    form[action$="/login"]
  selectors: true
  inputs:
    'input[id="username"]': >-
      {{ .Config.username }}
    'input[id="password"]': >-
      {{ .Config.password }}
    'input[name="remember"]': "on"
    'input[id="_username"]': ""
    # TODO: Can't find a way to have a dynamic `name="..."` *and* dynamic `value="..."`:
    'input[type="hidden"]:not([id="_token"], [id="_captcha"])': "0"
  selectorinputs:
    _token:
      selector: >-
        input[name="_token"]
      attribute: "value"
    _captcha:
      selector: >-
        input[name="_captcha"]
      attribute: "value"
  error:
    - selector: >-
        .auth-form__errors
  test:
    path: "/torrents"
    selector: >-
      form[action*="/logout"]

search:
  paths:
    - path: >-
        /users/{{ .Config.username }}/torrents
      inputs:
        showMorePrecision: "true"
  inputs:
    # TODO: How to filter out the categories like "9100", "User/Site", that shouldn't be
    # mapped to `fooCategory=include` query parameters? This will almost certainly cause
    # problems when some indexer treats an unknown query parameter as an error or
    # returns no results. The only other option within Cardigann currently results in
    # unnecessary additional requests using `search:/paths:/categories:`:
    $raw: >-
      {{ range .Categories }}&{{.}}=include{{end}}
    search: >-
      {{ .Keywords }}
    sortField: >-
      {{ .Config.sortField }}
    sortDirection: >-
      {{ .Config.sortDirection }}

  rows:
    # 1. the site-wide user data summary in the header, 1 row
    # 2. the user torrent history rows
    selector: >-
      .top-nav .top-nav__right,
      .user-torrents tr:has(td)

  fields:

    # User site data fields that are not mapped to Cardigann row fields:
    _siteUsername:
      selector: >-
        .top-nav__username
      optional: true
    _siteUserRatio:
      # An empty string, such as when the only contents is an infinity character,
      # becomes `null` in the `description:`:
      selector: >-
        .ratio-bar__ratio a:not([title*="Buffer"])
      filters:
        - name: "regexp"
          args: >-
            ([0-9.]+) +[0-9]+
      optional: true
    _siteUserRatioSufficient:
      # Minimum site-wide user ratio is 1:1 for this indexer:
      # Yields the ratio if it does *not* match indicating the ratio is too low.
      text: >-
        {{ re_replace .Result._siteUserRatio "^0(\.[0-9]+|)" "" }}
    _siteUserUploaded:
      selector: >-
        .top-nav__right .ratio-bar__uploaded
      filters:
        # Strip out `&nbsp;` characters:
        - name: "replace"
          args: [" ", " "]
      optional: true
    _siteUserDownloaded:
      selector: >-
        .top-nav__right .ratio-bar__downloaded
      filters:
        # Strip out `&nbsp;` characters:
        - name: "replace"
          args: [" ", " "]
      optional: true
    _siteUserBonusPoints:
      selector: >-
        .ratio-bar__points a[href*="/users/"][href$="/earnings"],
        .ratio-bar__seeding a[href*="/users/"][href$="/earnings"]
      filters:
        # Strip out `&nbsp;` and other unusual white-space characters:
        - name: "re_replace"
          args: ["[  ]", ""]
      optional: true
    _siteUserTokens:
      selector: >-
        .ratio-bar__tokens
      # Seedpool omits this from top navigation:
      optional: true
    _siteUserMessagesNew:
      selector: >-
        .top-nav__right a[href*="/users/"][href*="/inbox]:has(svg),
        .top-nav__right a[href*="/users/"][href*="/conversations"]:has(svg)
      attribute: "href"
      optional: true
    _siteUserNotificationsNew:
      selector: >-
        .top-nav__right a[href*="/users/"][href*="/notifications"]:has(svg)
      attribute: "href"
      optional: true
    _siteSystemNotifications:
      # Not available in UNIT3d top navigation:
      selector: >-
        .top-nav__right a[href*="/system/notifications"]:has(svg)
      attribute: "href"
      optional: true

    # User torrent history fields that are not mapped to Cardigann row fields:
    _historyAgent:
      selector: >-
        .user-torrents__agent
      optional: true
    _historyUploadActual:
      selector: >-
        .user-torrents__upload span:nth-child(1)
      filters:
        # Strip out `&nbsp;` characters:
        - name: "replace"
          args: [" ", " "]
      optional: true
    _historyUploadCredited:
      selector: >-
        .user-torrents__upload span:nth-child(3)
      filters:
        # Strip out `&nbsp;` characters:
        - name: "replace"
          args: [" ", " "]
      optional: true
    _historyDownloadActual:
      selector: >-
        .user-torrents__download span:nth-child(1)
      filters:
        # Strip out `&nbsp;` characters:
        - name: "replace"
          args: [" ", " "]
      optional: true
    _historyDownloadCredited:
      selector: >-
        .user-torrents__download span:nth-child(3)
      filters:
        # Strip out `&nbsp;` characters:
        - name: "replace"
          args: [" ", " "]
      optional: true
    _historyRatioActual:
      selector: >-
        .user-torrents__ratio span:nth-child(1)
      optional: true
    _historyLeechTime:
      selector: >-
        .user-torrents__leechtime
      optional: true
    _historySeedTimeUnsatisfied:
      selector: >-
        .user-torrents__seedtime .text-red
      optional: true
    _historyUpdatedAt:
      selector: >-
        .user-torrents__updated-at:not(:contains("N/A"))
      filters:
        # TODO: Time zone?
        - name: "dateparse"
          args: "yyyy-MM-dd HH:mm:ss"
      optional: true
    _historyCompletedAt:
      selector: >-
        .user-torrents__completed-at:not(:contains("N/A"))
      filters:
        # TODO: Time zone?
        - name: "dateparse"
          args: "yyyy-MM-dd HH:mm:ss"
      optional: true
    _historyPrewarnedAt:
      selector: >-
        .user-torrents__prewarned-at:not(:contains("N/A"))
      filters:
        # TODO: Time zone?
        - name: "dateparse"
          args: "yyyy-MM-dd HH:mm:ss"
      optional: true
    _historySeeding:
      selector: >-
        .user-torrents__seeding :not([title^="Not "])
      attribute: "title"
      optional: true
    _historyLeeching:
      selector: >-
        .user-torrents__leeching :not([title^="Not "])
      attribute: "title"
      optional: true
    _historyWarned:
      selector: >-
        .user-torrents__warned :not([title^="Not "])
      attribute: "title"
      optional: true
    _historyImmune:
      selector: >-
        .user-torrents__immune :not([title^="Not "])
      attribute: "title"
      optional: true
    _historyUploader:
      selector: >-
        .user-torrents__uploader :not([title^="Not "])
      attribute: "title"
      optional: true
    _historyStatus:
      selector: >-
        .user-torrents__status :not([title^="Not "])
      attribute: "title"
      optional: true
    _historyCategory:
      # The default category for the row if no categories are in the query. Match the
      # ordering under `categorymappings:`:
      case:
        .top-nav__username: "9100"
        .user-torrents__uploader :not([title^="Not "]): "uploaded"
        .user-torrents__warned :not([title^="Not "]): "hitrun"
        .user-torrents__prewarned-at:not(:contains("N/A")): "prewarn"
        .user-torrents__seedtime .text-red: "unsatisfied"
        ? .user-torrents__leeching :not([title^="Not "]),
          .user-torrents__seeding :not([title^="Not "])
        : "active"
        .user-torrents__completed-at:not(:contains("N/A")): "completed"
        .user-torrents__immune :not([title^="Not "]): "immune"
        .user-torrents__leechtime: "downloaded"

    # The filters for a user's torrent history that have valuable use cases can overlap,
    # but Cardigann, unfortunately supports only one category per row. Choose the first
    # category from the query that matches the row. Given that Cardigann's filters
    # aren't applied to `text:` values and that variable expressions can't be used in
    # template statement arguments beyond the first, we have to use a series of working
    # fields:
    _queryCategories:
      text: >-
        {{ join .Categories "," }}
    _queryCategoriesNotUploaded:
      text: "\
        {{ if .Result._historyUploader }}\
          {{ .Result._queryCategories }}\
        {{ else }}\
          {{ re_replace .Result._queryCategories \",?uploaded,?\" \",\" }}\
        {{ end }}"
    _queryCategoriesNotHitNRun:
      text: "\
        {{ if .Result._historyWarned }}\
          {{ .Result._queryCategoriesNotUploaded }}\
        {{ else }}\
          {{ re_replace .Result._queryCategoriesNotUploaded \",?hitrun,?\" \",\" }}\
        {{ end }}"
    _queryCategoriesNotPreWarn:
      text: "\
        {{ if .Result._historyPrewarnedAt }}\
          {{ .Result._queryCategoriesNotHitNRun }}\
        {{ else }}\
          {{ re_replace .Result._queryCategoriesNotHitNRun \",?prewarn,?\" \",\" }}\
        {{ end }}"
    _queryCategoriesSatisfied:
      text: "\
        {{ if .Result._historySeedTimeUnsatisfied }}\
          {{ .Result._queryCategoriesNotPreWarn }}\
        {{ else }}\
          {{ re_replace .Result._queryCategoriesNotPreWarn \",?unsatisfied,?\" \",\" }}\
        {{ end }}"
    _queryCategoriesInactive:
      text: "\
        {{ if or .Result._historyLeeching .Result._historySeeding }}\
          {{ .Result._queryCategoriesSatisfied }}\
        {{ else }}\
          {{ re_replace .Result._queryCategoriesSatisfied \",?active,?\" \",\" }}\
        {{ end }}"
    _queryCategoriesIncomplete:
      text: "\
        {{ if .Result._historyCompletedAt }}\
          {{ .Result._queryCategoriesInactive }}\
        {{ else }}\
          {{ re_replace .Result._queryCategoriesInactive \",?completed,?\" \",\" }}\
        {{ end }}"
    _queryCategoriesNotImmune:
      text: "\
        {{ if .Result._historyImmune }}\
          {{ .Result._queryCategoriesIncomplete }}\
        {{ else }}\
          {{ re_replace .Result._queryCategoriesIncomplete \",?immune,?\" \",\" }}\
        {{ end }}"
    _queryCategoriesNotDownloaded:
      text: "\
        {{ if .Result._historyLeechTime }}\
          {{ .Result._queryCategoriesNotImmune }}\
        {{ else }}\
          {{ re_replace .Result._queryCategoriesNotImmune \",?downloaded,?\" \",\" }}\
        {{ end }}"
    _queryCategoriesHistory:
      text: >-
        {{ re_replace .Result._queryCategoriesNotDownloaded ",?9100,?" "" }}
    category:
      case:
        .top-nav__username: "9100"
      optional: true
      default: "\
        {{ if .Result._queryCategoriesHistory }}\
          {{ re_replace .Result._queryCategoriesHistory \"([^,]+).*\" \"$1\" }}\
        {{ else }}\
          {{ .Result._historyCategory }}\
        {{ end }}\
        "

    # Fields that are mapped to Cardigann row fields.

    # See `./.torznab-mapped-fields.yaml` for how to translate mapped Torznab fields
    # back to the fields specific to the row's category:
    title:
      # 1. site-wide user data: the authenticated username
      # 2. user torrent history: the torrent name
      selector: >-
        .top-nav__username,
        .user-torrents__name
    details:
      # 1. site-wide user data: the authenticated username profile
      # 2. user torrent history: the torrent page
      selector: >-
        .top-nav__username,
        .user-torrents__name
      attribute: "href"
    download:
      # 1. site-wide user data: the authenticated user's torrent history,
      #    not a valid download URL but the field is required
      # 2. user torrent history: download the `*.torrent` file
      selector: >-
        .top-nav__right a[href*="/users/"][href$="/torrents"]
      attribute: "href"
      optional: true
      default: >-
        {{
          re_replace
          .Result.details
          "https://([^/]+)/torrents/"
          "https://$1/torrents/download/"
        }}
    seeders:
      # 1. site-wide user data: the number currently seeding torrents
      # 2. user torrent history: the number of seeders for the torrent
      selector: >-
        .ratio-bar__seeding a[href*="/users/"][href*="/active"],
        .user-torrents__seeders
    leechers:
      # 1. site-wide user data: the number currently downloading torrents
      # 2. user torrent history: the number of seeders for the torrent
      selector: >-
        .ratio-bar__leeching a[href$="/active"],
        .user-torrents__leechers
      # Seedpool omits this from top navigation:
      optional: true
    grabs:
      # 1. site-wide user data: the total number of torrents grabbed by the user,
      #    not available in UNIT3d top navigation
      # 2. user torrent history: the number of times the torrent has been grabbed
      selector: >-
        .user-torrents__times
      optional: true
    size:
      # 1-2. site-wide user data: the download buffer available for their current ratio
      # 3. user torrent history: the total size of the torrent's files
      selector: >-
        .ratio-bar__buffer,
        .ratio-bar__ratio a[title*="Buffer"],
        .user-torrents__size
    date:
      # 1. site-wide user data: the user's registration date,
      #    not available in UNIT3d top navigation
      # 2. user torrent history: the date the user first downloaded the torrent
      selector: >-
        .user-torrents__created-at:not(:contains("N/A"))
      filters:
        # TODO: Time zone?
        - name: "dateparse"
          args: "yyyy-MM-dd HH:mm:ss"
      optional: true
      default: "now"
    minimumratio:
      # 2. user torrent history: the user's ratio for this torrent including credits
      selector: >-
        .user-torrents__ratio span:nth-child(3)
      optional: true
      # 1. site-wide user data: the minimum required site-wide ratio for the user
      default: 1.0
    minimumseedtime:
      # 1. site-wide user data: the user's average site-wide seeding time,
      #    not available in UNIT3d top navigation
      # 2. user torrent history: the user's ratio for this torrent including credits
      selector: >-
        .user-torrents__seedtime
      optional: true

    _siteUserUnmapped:
      # TODO: Regarding extensions to Cardigann, this approach is a kludge while we work
      # out use cases and the right data models to support those use cases. Serializing
      # JSON using Cardigann templates is obviously an anti-pattern. For now anything
      # beyond one level deep is even more of a nightmare, so keep it flat and note when
      # there's temptation to add depth for future design decisions:
      #
      # TODO: Add alerts for when there are enough bonus points to buy the most optimal
      # reward.
      text: "\
        {\n
          \"ratio\": {{ if .Result._siteUserRatio }}true{{ else }}null{{ end }},\n
          \"uploaded\": \"{{ .Result._siteUserUploaded }}\",\n
          \"downloaded\": \"{{ .Result._siteUserDownloaded }}\",\n
          \"bonusPoints\": {{ .Result._siteUserBonusPoints }},\n
          \"tokens\": {{ .Result._siteUserTokens }},\n
          \"notificationsNew\": \
        {{ if .Result._siteUserNotificationsNew }}true{{ else }}false{{ end }},\n
          \"messagesNew\": \
        {{ if .Result._siteUserMessagesNew }}true{{ else }}false{{ end }},\n
          \"hnrsURL\": \"{{ .Result.download }}?unsatisfied=include\
        &active=exclude&sortField=created_at&sortDirection=desc\",\n
          \"alerts\": \"\
        {{ if .Result._siteUserRatioSufficient }}{{ else }}\
        ratio < {{ .Result.minimumratio }}, {{ end }}\
        {{ if .Result._siteUserNotificationsNew }}new notification, {{ else }}{{ end }}\
        {{ if .Result._siteUserMessagesNew }}new message{{ else }}{{ end }}\
        \"
        }"
    _historyUnmapped:
      text: "\
        {\n
          \"agent\": \"{{ .Result._historyAgent }}\",\n
          \"uploadActual\": \"{{ .Result._historyUploadActual }}\",\n
          \"uploadCredited\": \"{{ .Result._historyUploadCredited }}\",\n
          \"downloadActual\": \"{{ .Result._historyDownloadActual }}\",\n
          \"downloadCredited\": \"{{ .Result._historyDownloadCredited }}\",\n
          \"ratioActual\": {{ .Result._historyRatioActual }},\n
          \"leechTime\": \"{{ .Result._historyLeechTime }}\",\n
          \"updatedAt\": \"{{ .Result._historyUpdatedAt }}\",\n
          \"completedAt\": \"{{ .Result._historyCompletedAt }}\",\n
          \"prewarnedAt\": \"{{ .Result._historyPrewarnedAt }}\",\n
          \"seeding\": {{ if .Result._historySeeding }}true{{ else }}false{{ end }},\n
          \"leeching\": {{ if .Result._historyLeeching }}true{{ else }}false{{ end }},\n
          \"warned\": {{ if .Result._historyWarned }}true{{ else }}false{{ end }},\n
          \"immune\": {{ if .Result._historyImmune }}true{{ else }}false{{ end }},\n
          \"uploader\": {{ if .Result._historyUploader }}true{{ else }}false{{ end }},\n
          \"status\": {{ if .Result._historyStatus }}true{{ else }}false{{ end }}\n
        }"
    description:
      # Serialize remaining fields not mapped to Cardigann fields into arbitrary JSON.
      # Use quotes instead of block scalars to control whitespace across lines:
      text: "\
        {{ if .Result._siteUsername }}{{ .Result._siteUserUnmapped }}\
        {{ else }}{{ .Result._historyUnmapped }}{{ end }}"

# json UNIT3D 8.3.6 (custom)
